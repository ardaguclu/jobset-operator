/*
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	openshiftoperatorv1 "github.com/openshift/jobset-operator/pkg/apis/openshiftoperator/v1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// JobSetOperatorLister helps list JobSetOperators.
// All objects returned here must be treated as read-only.
type JobSetOperatorLister interface {
	// List lists all JobSetOperators in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*openshiftoperatorv1.JobSetOperator, err error)
	// JobSetOperators returns an object that can list and get JobSetOperators.
	JobSetOperators(namespace string) JobSetOperatorNamespaceLister
	JobSetOperatorListerExpansion
}

// jobSetOperatorLister implements the JobSetOperatorLister interface.
type jobSetOperatorLister struct {
	listers.ResourceIndexer[*openshiftoperatorv1.JobSetOperator]
}

// NewJobSetOperatorLister returns a new JobSetOperatorLister.
func NewJobSetOperatorLister(indexer cache.Indexer) JobSetOperatorLister {
	return &jobSetOperatorLister{listers.New[*openshiftoperatorv1.JobSetOperator](indexer, openshiftoperatorv1.Resource("jobsetoperator"))}
}

// JobSetOperators returns an object that can list and get JobSetOperators.
func (s *jobSetOperatorLister) JobSetOperators(namespace string) JobSetOperatorNamespaceLister {
	return jobSetOperatorNamespaceLister{listers.NewNamespaced[*openshiftoperatorv1.JobSetOperator](s.ResourceIndexer, namespace)}
}

// JobSetOperatorNamespaceLister helps list and get JobSetOperators.
// All objects returned here must be treated as read-only.
type JobSetOperatorNamespaceLister interface {
	// List lists all JobSetOperators in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*openshiftoperatorv1.JobSetOperator, err error)
	// Get retrieves the JobSetOperator from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*openshiftoperatorv1.JobSetOperator, error)
	JobSetOperatorNamespaceListerExpansion
}

// jobSetOperatorNamespaceLister implements the JobSetOperatorNamespaceLister
// interface.
type jobSetOperatorNamespaceLister struct {
	listers.ResourceIndexer[*openshiftoperatorv1.JobSetOperator]
}
